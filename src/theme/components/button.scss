@use "../common";

@include common.theme((
	button-default-bg: (
		dark: rgb(64, 64, 64),
	),
	button-default-bg-hover: (
		dark: rgb(90, 90, 90),
	),
	button-default-fg: (
		dark: var(--fg),
	),

	button-primary-bg: (
		dark: rgb(0, 192, 255),
	),
	button-primary-bg-hover: (
		dark: rgb(92, 214, 255),
	),
	button-primary-fg: (
		dark: black,
	),
	button-primary-focus: (
		dark: rgb(200, 241, 255),
	),

	button-success-bg: (
		dark: rgb(0, 200, 100),
	),
	button-success-bg-hover: (
		dark: rgb(0, 242, 121),
	),
	button-success-fg: (
		dark: black,
	),
	button-success-focus: (
		dark: rgb(200, 255, 228),
	),

	button-warning-bg: (
		dark: rgb(230, 180, 0),
	),
	button-warning-bg-hover: (
		dark: rgb(255, 220, 105),
	),
	button-warning-fg: (
		dark: black,
	),
	button-warning-focus: (
		dark: rgb(255, 243, 200),
	),

	button-danger-bg: (
		dark: rgb(255, 0, 64),
	),
	button-danger-bg-hover: (
		dark: rgb(255, 70, 100),
	),
	button-danger-fg: (
		dark: black,
	),
	button-danger-focus: (
		dark: rgb(255, 200, 214),
	),

	button-input-bg: (
		dark: rgb(16, 16, 16),
	),
	button-input-bg-hover: (
		dark: rgb(60, 60, 60),
	),
	button-input-bg-active: (
		dark: rgb(80, 80, 80),
	),
	button-input-fg: (
		dark: white,
	),
	button-input-border: (
		dark: rgb(80, 80, 80),
	),

	button-text-bg: (
		dark: transparent,
	),
	button-text-bg-hover: (
		dark: rgb(80, 80, 80),
	),
	button-text-bg-active: (
		dark: rgb(100, 100, 100),
	),
	button-text-fg: (
		dark: var(--fg),
	),
));

.button {
	font-family: inherit;
	font-size: inherit;
	font-weight: 600;
	line-height: 1;

	cursor: pointer;

	outline: none;
	@include common.padding(control-pad, var(--control-border));

	border-radius: var(--control-radius);
	transition: var(--color-transition) background-color,
		var(--color-transition) border-color;

	&:not(.button_text) {
		box-shadow: var(--control-shadow);
	}

	&[disabled] {
		cursor: default;
		filter: var(--control-disabled);
	}
}

@each $variant in (default, primary, success, warning, danger, input, text) {
	.button_#{$variant} {
		background-color: var(--button-#{$variant}-bg);
		color: var(--button-#{$variant}-fg);
		border: var(--button-#{$variant}-border, transparent) solid var(--control-border);

		&:hover:not(:active):not([disabled]) {
			background-color: var(--button-#{$variant}-bg-hover);
		}

		&:focus-visible {
			border-color: var(--button-#{$variant}-focus, var(--accent));
		}

		&:active {
			background-color: var(--button-#{$variant}-bg-active, var(--button-#{$variant}-bg));
		}
	}
}

.button_input {
	text-align: left;
}
